{"version":3,"file":"static/js/3.8739e89b.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FriendList = styled.ul`\ndisplay: flex;\nwidth: 300px;\nflex-direction: column;\n`\nexport const FriendItem = styled.li`\ndisplay: flex;\nmargin-bottom: 10px;\nalign-items: center;\njustify-content: space-between;\noutline: 1px solid black;\nborder-radius: 4px;\npadding: 0 10px;\n`\n\nexport const Button = styled.button`\nwidth: 50px;\nheight: 30px;\nborder-radius: 4px;\nbackground-color: transparent;\nborder-color: whitesmokes;\n\n:focus{\n    box-shadow: 10px 5px 5px lightblue;\n}\n`\nexport const Wrap = styled.div`\ndisplay: flex;\nflex-direction: row;\n\n`\nexport const Item = styled.p`\nmargin-right:10px\n`","export const selectContacts = state => state.contacts;\nexport const selectStatusFilter = state => state.filters.filters;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error","import { FriendList, FriendItem, Button, Wrap, Item } from \"./ContactList.styled\"\nimport PropTypes from \"prop-types\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectStatusFilter } from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nconst getVisibleContact = (contacts, statusFilters) => {\n    \n    \n    if (statusFilters === undefined) {\n        statusFilters =''\n    } \n    return contacts.items.filter(contact => contact.name.toLowerCase().includes(statusFilters.value));\n    \n      } \n\nexport const ContactList = () => {\n\n    const contacts = useSelector(selectContacts);\n    const statusFilter = useSelector(selectStatusFilter);\n    const visibleContacts = getVisibleContact(contacts, statusFilter);\n    const dispatch = useDispatch();\n    \n\n\n        return(<FriendList>\n        {visibleContacts.map(({ id, name, phone }) => \n        {\n            const handleDelete = () => dispatch(deleteContact(id));\n            return (\n            <FriendItem key={id}>\n                <Wrap>\n                <Item>{name}</Item>\n                <Item>{phone}</Item>\n                </Wrap>\n                <Button\n                    type=\"button\"\n                    onClick={handleDelete}>Delete\n                </Button>\n                </FriendItem>\n            )}\n        )}\n    </FriendList>)\n}\n\n\nFriendList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            number: PropTypes.number.isRequired,\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n        }),\n    ),\n}","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\noutline: 1px solid black;\npadding: 20px;\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 600;\n\n`\nexport const Input = styled.input`\nwidth: 200px;\nmargin-bottom: 20px;\nmargin-top: 10px;\nborder-color: whitesmoke;\noutline: transparent;\nborder-radius: 4px;\nheight: 20px;\n:focus{\n    box-shadow: 10px 5px 5px lightblue;\n}\n`\n\nexport const Button = styled.button`\nwidth: 100px;\nborder-radius: 4px;\nbackground-color: transparent;\nborder-color: whitesmokes;\n:focus{\n    box-shadow: 10px 5px 5px lightblue;\n}\n`","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n\n    \n    const handleChange = (e) => {\n        switch (e.target.name) {\n            case 'name':\n                setName(e.target.value)\n                break;\n            \n            case 'number':\n                setNumber(e.target.value)\n                break;\n        \n            default:\n                return;\n        }\n    }\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n        const handleSubmit = e => {\n            e.preventDefault()\n            const name = e.target.elements.name.value;\n            const number = e.target.elements.number.value;\n            const data = { name, number }\n            contacts.items.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n            ? alert(`${name} is already in contacts.`)\n            :dispatch(addContact(data))  \n            reset()\n    }\n    \n    const reset = () => {\n    setName('');\n    setNumber('')\n    }\n\n    return (\n         <>\n         <h1>Phonebook</h1>\n            <Form onSubmit={handleSubmit}>\n                <Label> Name  \n                    <Input\n                        onChange={handleChange}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </Label>\n                <Label> Number\n                    <Input\n                        onChange={handleChange}\n                        value={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </Label>\n                <Button type=\"submit\">Add friend</Button>\n                \n        </Form>\n        </>)\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["FriendList","styled","FriendItem","Button","Wrap","Item","selectContacts","state","contacts","selectStatusFilter","filters","selectIsLoading","isLoading","ContactList","visibleContacts","statusFilters","undefined","items","filter","contact","name","toLowerCase","includes","value","getVisibleContact","useSelector","dispatch","useDispatch","map","id","phone","type","onClick","deleteContact","propTypes","PropTypes","number","Form","Label","Input","ContactForm","useState","setName","setNumber","handleChange","e","target","reset","onSubmit","preventDefault","elements","data","find","alert","addContact","onChange","pattern","title","required","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}