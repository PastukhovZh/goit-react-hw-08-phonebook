{"version":3,"file":"static/js/68.65ccc9f8.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FriendList = styled.ul`\n\ndisplay: flex;\n/* width: 300px; */\nflex-direction: row;\nflex-wrap: wrap;\ngap:10px;\n`\nexport const FriendItem = styled.li`\noverflow:hidden;\n/* display: flex; */\ntext-align: center;\nwidth: 125px;\nheight: 150px;\nalign-items: center;\njustify-content: space-between;\noutline: 1px solid black;\nborder-radius: 4px;\npadding: 0 10px;\n`\n\nexport const Button = styled.button`\n/* width: 50px; */\n/* height: 30px; */\n/* border: 1px solid black; */\npadding: 5px;\nborder-radius: 4px;\nbackground-color: transparent;\nborder-color: whitesmokes;\n\n:hover{\n    background-color: #add8e640;\n}\n`\nexport const Wrap = styled.div`\n/* display: flex; */\n/* flex-direction: row; */\n\n`\nexport const Item = styled.p`\n/* margin-right:10px */\nfont-size:small;\n`","export const selectContacts = state => state.contacts;\nexport const selectStatusFilter = state => state.filters.filters;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error","import { FriendList, FriendItem, Button, Wrap, Item } from \"./ContactList.styled\"\nimport PropTypes from \"prop-types\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectStatusFilter } from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { Text } from \"@chakra-ui/react\";\n\nconst getVisibleContact = (contacts, statusFilters) => {\n    \n    \n    if (statusFilters === undefined) {\n        statusFilters =''\n    } \n    return contacts.items.filter(contact => contact.name.toLowerCase().includes(statusFilters.value));\n    \n      } \n\nexport const ContactList = () => {\n\n    const contacts = useSelector(selectContacts);\n    const statusFilter = useSelector(selectStatusFilter);\n    const visibleContacts = getVisibleContact(contacts, statusFilter);\n    const dispatch = useDispatch();\n    \n\n\n        return(<FriendList>\n        {visibleContacts.map(({ id, name, number }) => \n        {\n            const handleDelete = () => dispatch(deleteContact(id));\n            return (\n            <FriendItem key={id}>\n                    <Wrap>\n                        <img width='100px' src='http://cdn.goodhouse.com.ua/images-png/14769/147691.png' alt=\"empty user\"/>\n                <Item>{name}</Item>\n                <Item>{number}</Item>\n                </Wrap>\n                <Button\n                    type=\"button\"\n                    onClick={handleDelete}><Text fontSize='large'>Delete</Text>\n                </Button>\n                </FriendItem>\n            )}\n        )}\n    </FriendList>)\n}\n\n\nFriendList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            number: PropTypes.number.isRequired,\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n        }),\n    ),\n}","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\npadding: 20px;\n`\n\nexport const Label = styled.label`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nfont-weight: 600;\n\n`\nexport const Input = styled.input`\noutline: 1px solid black;\nwidth: 100%;\nmargin-bottom: 20px;\nmargin-top: 10px;\nborder-color: whitesmoke;\n/* outline: transparent; */\nborder-radius: 4px;\n/* height: 20px; */\n/* :focus{\n    box-shadow: 10px 5px 5px lightblue;\n} */\n`\n\nexport const Button = styled.button`\ntext-align: center;\nwidth: 100%;\nheight: 50px;\nborder-radius: 4px;\nbackground-color: transparent;\nborder-color: whitesmokes;\n:hover{\n    background-color: #add8e640;\n}\n/* :focus{\n    box-shadow: 10px 5px 5px lightblue;\n} */\n`","import { Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n\n    \n    const handleChange = (e) => {\n        switch (e.target.name) {\n            case 'name':\n                setName(e.target.value)\n                break;\n            \n            case 'number':\n                setNumber(e.target.value)\n                break;\n        \n            default:\n                return;\n        }\n    }\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n        const handleSubmit = e => {\n            e.preventDefault()\n            const name = e.target.elements.name.value;\n            const number = e.target.elements.number.value;\n            const data = { name, number }\n            contacts.items.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n            ? alert(`${name} is already in contacts.`)\n            :dispatch(addContact(data))  \n            reset()\n    }\n    \n    const reset = () => {\n    setName('');\n    setNumber('')\n    }\n\n    return (\n         <>\n         <Text padding='10px' fontSize='2xl' borderBottom='2mm ridge rgba(211, 220, 50, .6);'>Phonebook</Text>\n            <Form onSubmit={handleSubmit}>\n                <Label> <Text fontSize='large' >Name</Text>  \n                    <Input\n                        onChange={handleChange}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </Label>\n                <Label> <Text fontSize='large' >Number</Text>\n                    <Input\n                        onChange={handleChange}\n                        value={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </Label>\n                <Button type=\"submit\"> <Text fontSize='x-large' >Add friend</Text></Button>\n                \n        </Form>\n        </>)\n}","import styled from \"styled-components\"\n\nexport const Input = styled.input`\nwidth: 200px;\nmargin-bottom: 20px;\nmargin-top: 10px;\nborder-color: whitesmoke;\noutline: 1px solid black;\n/* outline: transparent; */\nborder-radius: 4px;\nheight: 20px;\n:focus{\n    box-shadow: 10px 5px 5px lightblue;\n}\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 600;\n\n`","import { Input,Label } from \"./Filter.styled\"\nimport PropTypes from \"prop-types\"\nimport { useDispatch } from \"react-redux\"\nimport { findContact } from \"redux/contacts/filtersSlise\"\n\n\n\n\n\n\n\n\n\nexport const Filter = () => {\n\nconst dispatch = useDispatch()\n    const handleChange = e => {\n        return dispatch(findContact( e.target.value.toLowerCase()))\n}\n    \n    return(<Label>\n        Find contacts by name\n        <Input type='name' onChange={handleChange}></Input>\n    </Label>)\n} \nLabel.propTypes = {\n    value: PropTypes.string,\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { Outlet } from 'react-router-dom';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter/>\n      <ContactList >\n        <Outlet/>\n      </ContactList>\n    </>\n  );\n}\n\n// qwertyui@rrtyj.nbgfr\n// qwertyui"],"names":["FriendList","styled","FriendItem","Button","Wrap","Item","selectContacts","state","contacts","selectStatusFilter","filters","selectIsLoading","isLoading","ContactList","visibleContacts","statusFilters","undefined","items","filter","contact","name","toLowerCase","includes","value","getVisibleContact","useSelector","dispatch","useDispatch","map","id","number","width","src","alt","type","onClick","deleteContact","fontSize","propTypes","PropTypes","Form","Label","Input","ContactForm","useState","setName","setNumber","handleChange","e","target","reset","padding","borderBottom","onSubmit","preventDefault","elements","data","find","alert","addContact","onChange","pattern","title","required","Filter","findContact","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}